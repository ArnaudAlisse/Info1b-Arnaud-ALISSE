#include "../head/map.h"
#include <stdlib.h>
#include <stdio.h>

Map map = {.map = NULL, .size = 0};

void create_empty_map (Map* map, int size)
{	
	map -> size = size;
	map -> map = malloc(sizeof(Color) * map -> size * map -> size);
	
}


void set_map_value (Map* map, int x, int y, Color value)
{
	map -> map[x * map -> size + y]= value;
}


void fill_map(Map* map)
{
	int n=0;
	Color a = PLAYER_1;
	Color b = PLAYER_2;
	for (int i=0; i < map->size; i = i+1)
	{
		for (int j=0; j< map->size; j=j+1)
		{
			n=rand()%7 + 3;
			set_map_value(map, i, j, n);
		}
	}
	
	map->map[map->size* (map->size - 1)]=a;
	map->map[map->size]=b;
}

Color get_map_value (Map* map, int x, int y)
{
	if (map -> map == NULL || x > map -> size || y > map -> size)
	{
		printf("[ERROR] map not big enough or not initialized %p %i access (%i %i)", map -> map, map -> size, x, y);
		return ERROR;
	}
	return map -> map[y * map -> size + x];
}



void affiche_map(Map* map)
{
	for (int i=0; i <= map->size; i=i+1)
	{
		for (int j=0; j <= map->size; j=j+1)
		{
			if (get_map_value(map, i,j) == 1){
			printf ("\033[150;01m1\033[00m");
			}
			if (get_map_value(map, i,j) == 2){
			printf ("\033[120;01m2\033[00m");
			}
			if (get_map_value(map, i,j) == 3){
			printf ("\033[31;01mR\033[00m");
			}
			
			if (get_map_value(map, i,j) == 4){
			printf("\033[32;01mG\033[00m");
			}
			
			if (get_map_value(map, i,j) == 5){
			printf("\033[34;01mB\033[00m");
			}
			
			if (get_map_value(map, i,j) == 6){
			printf("\033[33;01mY\033[00m");
			}
			
			if (get_map_value(map, i,j) == 7){
			printf("\033[35;01mM\033[00m");
			}
			
			if (get_map_value(map, i,j) == 8){
			printf("\033[96;01mC\033[00m");
			}
			
			if (get_map_value(map, i,j) == 9){
			printf("\033[97;01mW\033[00m");
			}
		}
		
		printf("\n");
	}
}

//QUESTION 3

void joue_un_coup(Map * map)
{
	Char A;
	Chat coup_joue;
	int B;
	int numero_joueur;
	int m=0;
	int k=0;
	printf("Quel joueur Ãªtes vous ?")
	B = scanf("%d",&numero_joueur)

	printf("Quel coup voulez vous jouer ?")
	A=scanf("%c",&coup_joue)
	
	while (m == 0)
	{
		while (k == 0)
		{
			for (int i = 0; i <= map->size;i=i+1)
			{
				for (int j = 0; j<= map->size; j=j+1)
				{
					if B==1
					{
		
						if (get_map_value(map,i,j) == 1)
						{
							if (get_map_value(map,i,j-1)) == // METTRE LA COLOR VALUE DE COUP_JOUE//
							{
								set_map_value (Map* map, i,j-1, 1);
								k=1;
							}	
							if (get_map_value(map,i,j+1)) == // METTRE LA COLOR VALUE DE COUP_JOUE//
							{
								set_map_value (Map* map, i,j+1, 1);
								k=1;
							}
							if (get_map_value(map,i-1,j)) == // METTRE LA COLOR VALUE DE COUP_JOUE//
							{
								set_map_value (Map* map, i-1,j, 1);
								k=1;
							}
							if (get_map_value(map,i+1,j)) == // METTRE LA COLOR VALUE DE COUP_JOUE//
							{
								set_map_value (Map* map, i+1,j, 1);
								k=1;
							}
						
						}
					}
		
					if B==2
					{
		
						if (get_map_value(map,i,j) == 2)
						{
							if (get_map_value(map,i,j-1)) == // METTRE LA COLOR VALUE DE COUP_JOUE//
							{
								set_map_value (Map* map, i,j-1, 2);
							}	
							if (get_map_value(map,i,j+1)) == // METTRE LA COLOR VALUE DE COUP_JOUE//
							{
								set_map_value (Map* map, i,j+1, 2);
							}
							if (get_map_value(map,i-1,j)) == // METTRE LA COLOR VALUE DE COUP_JOUE//
							{
								set_map_value (Map* map, i-1,j, 2);
							}
							if (get_map_value(map,i+1,j)) == // METTRE LA COLOR VALUE DE COUP_JOUE//
							{
								set_map_value (Map* map, i+1,j, 2);
							}
						
						}
					}
					if (i == map->size)
					{
						if (j == map->size)
						{
							m=1;
						}
					}
			
				}
			}
		}
	}
int main(int argc, char** argv)
{
	create_empty_map(&map, 10);
	fill_map(&map);
	affiche_map(&map);
	
}














