#include "../head/map.h"
#include <stdlib.h>
#include <stdio.h>

Map map = {.map = NULL, .size = 0};

void create_empty_map (Map* map, int size)
{	
	map -> size = size;
	map -> map = malloc(sizeof(Color) * map -> size * map -> size);
	
}


void set_map_value (Map* map, int x, int y, Color value)
{
	map -> map[x * map -> size + y]= value;
}


void fill_map(Map* map)
{
	int n=0;
	Color a = PLAYER_1;
	Color b = PLAYER_2;
	for (int i=0; i < map->size; i = i+1)
	{
		for (int j=0; j< map->size; j=j+1)
		{
			n=rand()%7 + 3;
			set_map_value(map, i, j, n);
		}
	}
	
	map->map[map->size*(map->size-1)]=a;
	map->map[map->size]=b;
}

Color get_map_value (Map* map, int x, int y)
{
	if (map -> map == NULL || x > map -> size || y > map -> size)
	{
		printf("[ERROR] map not big enough or not initialized %p %i access (%i %i)", map -> map, map -> size, x, y);
		return ERROR;
	}
	return map -> map[y * map -> size + x];
}



void affiche_map(Map* map)
{
	for (int i=0; i < map->size; i=i+1)
	{
		for (int j=0; j< map->size; j=j+1)
		{
			if (get_map_value(map, i,j) == 3){
			printf("R");
			}
			
			if (get_map_value(map, i,j) == 4){
			printf("G");
			}
			
			if (get_map_value(map, i,j) == 5){
			printf("B");
			}
			
			if (get_map_value(map, i,j) == 6){
			printf("Y");
			}
			
			if (get_map_value(map, i,j) == 7){
			printf("M");
			}
			
			if (get_map_value(map, i,j) == 8){
			printf("C");
			}
			
			if (get_map_value(map, i,j) == 9){
			printf("W");
			}
		}
		
		printf("\n");
	}
}



int main(int argc, char** argv)
{
	create_empty_map(&map, 10);
	fill_map(&map);
	affiche_map(&map);
	
}








